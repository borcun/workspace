#lang racket

(define sample-dna "TGACATTTCAGGTGAAAATCGTCCACATTCAGCAAAGCTAAGGTCAACCGGCTTTGTCACCGAACGAAAGCCAGGTAATTACATCTAGTGCAAACTACGCATCGCCGTAGCTCTACCACTGCTATTAATCAAGCGGTACTTACCGTTTACAAGCTTGGCACTGCAGCGTCCTTCGTGTCGGTGCTGTCATGGTTTCGTCTCATTTACGCGGGTCTCACGCCCCACATCCCCAAAACAAGTGGCGGAACGAAACATGGAAGCTTAGCAGAGGCTTTAACGGGCGACCGCTTTCATATAGGTGACATTCGATGGCCGGTAGGTCACTACCAAAGATTTTTTGTGCACTCCGTAGATGTAGTGTGTAGATACCCATCTTAACCAGCGCTGGCGATGTTAGTGGTAGAAACTCTCGAAAGCGAGTCCAAAGGGCGCTGGTGAAGTGCCTCTAGCTGTGTTCATGGCCGTAGTAGTAGGCCACTAAGATCTCCTCTCACGGCTGATGCGGGCCATGAGCTTGTGACGCTAAATGTAAGATTTGGCACCTTATTGCCTCCCCGCATCCACAATTAATGCTACGTAGCCCATAACTTATTAGGGGGTAGCTTCATGGAGGATGGCGATTTAGAGTTCCGAGACGTTACGTCAAGCCCAAAAGCTCGGGGCAAATCAAAGGCTCGGGGAGCGTCCATGAGAGCCATAAGCGTGTTGATACGGATGAACATCAGGCGTGGTTAGTTTACAGGCACAGATCAGCCGATGTACCATTTTGGCCCCAGAGGACGATGAGAATAGCTAGTCCAGCTTAAGCAGCCATG")
(define nucleotides "ATGC")

(define (count-nucleotide dna nucleotide)
  (if (zero? (string-length dna))
      0
      (let ((rest ((substring dna 1))))
        (if (char=? (string-ref dna 0) nucleotide)
          (+ 1 (count-nucleotide rest nucleotide))
          (count-nucleotide rest nucleotide)))))


(define (count sample-dna nucleotides)
  (unless (zero? (string-length nucleotides))
    (let ((nuc (string-ref nucleotides 0)))
      (printf "Nucleotide: ~a (~a)\n" nuc (count-nucleotide sample-dna nuc))
      (count sample-dna (substring nucleotides 1)))))

(count sample-dna nucleotides)